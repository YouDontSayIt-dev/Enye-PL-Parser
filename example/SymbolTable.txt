
numero			INT_KW

ny_nmr		IDENTIFIER

;				SEMI_COLON

numero			INT_KW

ny_nmr		IDENTIFIER

=				ASS_OPR

1				INTEGER

;				SEMI_COLON

numero			INT_KW

ny_panint		IDENTIFIER

=				ASS_OPR

ny_nmr		IDENTIFIER

;				SEMI_COLON

lipon				STRING_KW

ny_salita		IDENTIFIER

=				ASS_OPR

Mga			STRING_LITERAL

Mga			STRING_LITERAL

;				SEMI_COLON

lipon				STRING_KW

ny_salita		IDENTIFIER

=				ASS_OPR

ny_int		IDENTIFIER

+				ADD_OPR

ny_int		IDENTIFIER

;				SEMI_COLON

lipon				STRING_KW

ny_salita		IDENTIFIER

=				ASS_OPR

1				INTEGER

*				MULT_OPR

(				LEFT_PARENTHESIS

1				INTEGER

+				ADD_OPR

2				INTEGER

)				RIGHT_PARENTHESIS

;				SEMI_COLON

ipakita			PRINTF_KW

(				LEFT_PARENTHESIS

Teksto			STRING_LITERAL

)				RIGHT_PARENTHESIS

;				SEMI_COLON

basahin			SCANF_KW

(				LEFT_PARENTHESIS

String			STRING_LITERAL

,				COMMA

ny_int		IDENTIFIER

)				RIGHT_PARENTHESIS

;				SEMI_COLON

kapag				IF_KW

(				LEFT_PARENTHESIS

ny_int		IDENTIFIER

==				EQ_TO_OPR

3				INTEGER

)				RIGHT_PARENTHESIS

{				LEFT_CURLY_BRACES

basahin			SCANF_KW

(				LEFT_PARENTHESIS

String			STRING_LITERAL

,				COMMA

ny_int		IDENTIFIER

)				RIGHT_PARENTHESIS

;				SEMI_COLON

}				RIGHT_CURLY_BRACES

kapag				IF_KW

(				LEFT_PARENTHESIS

ny_int		IDENTIFIER

==				EQ_TO_OPR

5				INTEGER

)				RIGHT_PARENTHESIS

{				LEFT_CURLY_BRACES

basahin			SCANF_KW

(				LEFT_PARENTHESIS

String			STRING_LITERAL

,				COMMA

ny_int		IDENTIFIER

)				RIGHT_PARENTHESIS

;				SEMI_COLON

}				RIGHT_CURLY_BRACES

edi				ELSE_KW

{				LEFT_CURLY_BRACES

ipakita			PRINTF_KW

(				LEFT_PARENTHESIS

Editor			STRING_LITERAL

)				RIGHT_PARENTHESIS

;				SEMI_COLON

}				RIGHT_CURLY_BRACES

kapag				IF_KW

(				LEFT_PARENTHESIS

ny_int		IDENTIFIER

<=				LESS_THAN_OR_EQ_TO_OPR

3				INTEGER

)				RIGHT_PARENTHESIS

{				LEFT_CURLY_BRACES

ipakita			PRINTF_KW

(				LEFT_PARENTHESIS

Test			STRING_LITERAL

)				RIGHT_PARENTHESIS

;				SEMI_COLON

}				RIGHT_CURLY_BRACES

edi				ELSE_KW

kapag				IF_KW

(				LEFT_PARENTHESIS

ny_int		IDENTIFIER

==				EQ_TO_OPR

0				INTEGER

)				RIGHT_PARENTHESIS

{				LEFT_CURLY_BRACES

ipakita			PRINTF_KW

(				LEFT_PARENTHESIS

Editor			STRING_LITERAL

)				RIGHT_PARENTHESIS

;				SEMI_COLON

}				RIGHT_CURLY_BRACES

edi				ELSE_KW

{				LEFT_CURLY_BRACES

ipakita			PRINTF_KW

(				LEFT_PARENTHESIS

ny_salita		IDENTIFIER

)				RIGHT_PARENTHESIS

;				SEMI_COLON

}				RIGHT_CURLY_BRACES

bawat				FOR_KW

(				LEFT_PARENTHESIS

ny_int		IDENTIFIER

=				ASS_OPR

0				INTEGER

;				SEMI_COLON

ny_int		IDENTIFIER

<				LESS_OPR

5				INTEGER

;				SEMI_COLON

ny_int		IDENTIFIER

++				INC_OPR

)				RIGHT_PARENTHESIS

{				LEFT_CURLY_BRACES

bawat				FOR_KW

(				LEFT_PARENTHESIS

ny_panint		IDENTIFIER

=				ASS_OPR

0				INTEGER

;				SEMI_COLON

ny_panint		IDENTIFIER

<				LESS_OPR

5				INTEGER

;				SEMI_COLON

ny_panint		IDENTIFIER

++				INC_OPR

)				RIGHT_PARENTHESIS

{				LEFT_CURLY_BRACES

ipakita			PRINTF_KW

(				LEFT_PARENTHESIS

Wow			STRING_LITERAL

ang			STRING_LITERAL

galing			STRING_LITERAL

)				RIGHT_PARENTHESIS

;				SEMI_COLON

}				RIGHT_CURLY_BRACES

}				RIGHT_CURLY_BRACES

bawat				FOR_KW

(				LEFT_PARENTHESIS

ny_panint		IDENTIFIER

=				ASS_OPR

0				INTEGER

;				SEMI_COLON

ny_panint		IDENTIFIER

<				LESS_OPR

5				INTEGER

;				SEMI_COLON

ny_panint		IDENTIFIER

++				INC_OPR

)				RIGHT_PARENTHESIS

{				LEFT_CURLY_BRACES

ipakita			PRINTF_KW

(				LEFT_PARENTHESIS

Wow			STRING_LITERAL

ang			STRING_LITERAL

galing			STRING_LITERAL

)				RIGHT_PARENTHESIS

;				SEMI_COLON

}				RIGHT_CURLY_BRACES
